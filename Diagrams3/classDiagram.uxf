<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <help_text/>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>0</y>
      <w>530</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring::Scheduler
--
-controller: CarManufacturingController
-minutes: int
-day: int
-workingDayMinutes: int
-overTime: int
-timePerWorkstationMap: Map&lt;Class&lt;? extends CarModel&gt;, Integer&gt;
-validAlgorithms: List&lt;String&gt;
-algorithm: String
-batchOptions: Map&lt;String, String&gt;
--
+Scheduler(CarManufacturingController carManufacturingController): ctor
+getWorkingDayMinutes(): int
+getEstimatedCompletionTime(Car car): TimeStamp
-getEstCompletionTimeInMinutes(Car car): int
-createTimeStampForCar(int minutes, Car car): TimeStamp
-roundMinutes(int minutes, int avgTimeCarInStation): int
-carOnAssembly(Car car): boolean
-calculateWaitingTime(Car car, List&lt;Car&gt; workstationCars): int
-getUnfinishedCars(): List&lt;Car&gt;
-getMax(List&lt;Car&gt; cars): int
+addTime(int minutes): void
+getMinutes(): int
+getDay(): int
+getTime(): TimeStamp
+advanceDay(): void
+canAddCarToAssemblyLine(int minutes): boolean
-getWorkStationCars(): List&lt;Car&gt;
+getSchedulingAlgorithm(): String
+setSchedulingAlgorithm(String algorithm, Map&lt;String, String&gt; batchOptions): void
-isValidSchedulingAlgorithm(String algorithm): boolean
+getValidAlgorithms(): List&lt;String&gt;
+getNextScheduledCar(): Car
+createIterator(List&lt;Car&gt; cars): QueueIterator&lt;Car&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>640</y>
      <w>410</w>
      <h>410</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring::CarManufacturingController
--
-carQueue: LinkedList&lt;Car&gt;
-assemblyLine: AssemblyLine
-scheduler: Scheduler
-statisticsListeners: List&lt;StatisticsListener&gt;
-taskCompletedListener: TaskCompletedListener
--
+CarManufacturingController(): ctor
+addListener(StatisticsListener statisticsListener): void
-updateDelay(Car car): void
-createWorkStations(): LinkedList&lt;WorkStation&gt;
+getAssembly(): AssemblyLine
+advanceAssemblyAndUpdateSchedular(): void
-updateTime(int passedMinutes, Car finishedCar): void
-advanceAssemblyLine(Car nextCar): Car
-removeCarFromQueue(Car car): void
-getNextCarFromQueue(int maxWorkingMinutes): Car
-getLongestWorkTimeOfWorkStations(): int
+updateEstimatedCompletionTime(): void
-setFinishedCarDeliveryTime(int minutes, Car finishedCar): void
-canFinishNewCar(int minutes): boolean
-updateScheduleTime(int minutes): void
+addOrderToQueue(CarOrder carOrder): void
+getScheduler(): Scheduler
+getCarQueue(): List&lt;Car&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>790</x>
      <y>1140</y>
      <w>390</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>swop.Car::Car
--
-tasks: Set&lt;Task&gt;
-carModel: CarModel
-initialCompletionTime: TimeStamp
-estimatedCompletionTime: TimeStamp
-deliveryTime: TimeStamp
--
+Car(CarModel model): ctor
+isCompleted(): boolean
+getCompletedTasks(): Set&lt;Task&gt;
+getUncompletedTasks(): Set&lt;Task&gt;
-initiateTasks(): void
-createTask(String part, String option): Task
+getTasks(): Set&lt;Task&gt;
+getCarModel(): CarModel
+getCarModelName(): String
-setCarModel(CarModel carModel): void
+getSelectionForPart(String category): String
+getPartsMap(): Map&lt;String, String&gt;
+getInitialCompletionTime(): TimeStamp
+setEstimatedCompletionTime(TimeStamp timeStamp): void
+getEstimatedCompletionTime(): TimeStamp
+getCompletionTime(): TimeStamp
+setDeliveryTime(TimeStamp timeStamp): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3070</x>
      <y>1580</y>
      <w>640</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>swop.UI::CarMechanicUI
--
-cmGenerator: CarMechanicGenerator
-actions: List&lt;String&gt;
-carmechanic: CarMechanic
--
+setCarMechanic(CarMechanic carmechanic): void
+run(CarMechanic carmechanic): void
-selectAction(): void
-performAssemblyTask(): void
-checkAssemblyLineStatus(): void
-displayStationStatus(String stationName, List&lt;Task&gt; pendingTasks, List&lt;Task&gt; finishedTasks): void
-selectStation(): String
-displayAvailableStations(List&lt;String&gt; stationNames): void
-askOption(String s, int numberOfOptions): int
-performTaskAtWorkStation(String stationName): void
-selectTask(List&lt;Task&gt; taskList): Task
-displayAvailableTasks(List&lt;Task&gt; taskList): void
-showInfo(Task task): void
-displayTaskInfo(String info): void
-completeTask(String workstationName, Task task): void
-askTimeToCompleteTask(): int
-noTasks(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1850</x>
      <y>1580</y>
      <w>530</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>swop.UI::GarageHolderUI
--
-garageHolderGenerator: GarageHolderGenerator
-actions: List&lt;String&gt;
-garageHolder: GarageHolder
--
+setGarageHolder(GarageHolder garageHolder): void
+run(GarageHolder gh): void
-selectAction(): void
-generateOrder(): void
-getOrderForm(SortedMap&lt;String, List&lt;String&gt;&gt; options): Map&lt;String, Integer&gt;
-checkOrderDetails(): void
-indicateCarModel(List&lt;String&gt; carModels): int
-displayOrderingForm(Map&lt;String, List&lt;String&gt;&gt; optionsMap, String name): void
-askOption(int leftBound, int rightBound, String option): int
-displayEstimatedTime(String estCompletiontime): void
-isValidOrderID(Set&lt;CarOrder&gt; orders, String orderID): boolean
-getOrderFromID(Set&lt;CarOrder&gt; orders, String orderID): CarOrder
-printEmptyLine(): void
-selectOrderID(): String
-printError(String e): void
-showOrderDetails(String string): void
-displayOrders(Set&lt;CarOrder&gt; carOrders): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>1140</y>
      <w>380</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring::WorkStation
--
-name: String
-car: Car
-currentWorkingTime = 0: int
-listeners: List&lt;TaskCompletedListener&gt;
--
+WorkStation(String name): ctor
+addListener(TaskCompletedListener listener): void
+triggerListenersTaskCompletion(): void
+getUncompletedTasks(): List&lt;Task&gt;
+getCompletedTasks(): List&lt;Task&gt;
-isValidName(String name): boolean
+getTasks(): List&lt;Class&lt;? extends Task&gt;&gt;
+getName(): String
+getCar(): Car
+setCar(Car car): void
+getCurrentWorkingTime(): int
+isPartOfCurrentCarInWorkStation(String part): boolean
+getValueOfPart(String part): String
+completeTask(Task task, int time): void
+stationTasksCompleted(): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>490</y>
      <w>570</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>swop.Miscellaneous::Statistics
--
-carDelayMap: Map&lt;Integer, List&lt;Integer&gt;&gt;
+statisticsListener: StatisticsListener
--
+updateDelay(Car car): void
-getDayAndDelayMinutesCar(Car car): int[]
-calculateDelayMinutes(Car car): int
+addTimeToDelayMap(int minutes, int day): void
+getAvgDelay(): double
+getMdnDelay(): double
+getDelayLast2(): Map&lt;Integer, List&lt;Integer&gt;&gt;
-getFilteredMap(Map&lt;Integer, List&lt;Integer&gt;&gt; carDelayMap): Map&lt;Integer, List&lt;Integer&gt;&gt;
+getAvgOrders(): double
+getMdnOrders(): double
-getOrdersDailyFinished(): List&lt;Integer&gt;
+getOrdersLast2(): Map&lt;Integer, Integer&gt;
+getOrderStats(): AllStats
+getCarDelayMap(): Map&lt;Integer, List&lt;Integer&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>1110</y>
      <w>300</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>swop.Car::CarOrder
--
-car: Car
-ID: String
-orderTime: TimeStamp
--
+CarOrder(CarModel carModel): ctor
+getCar(): Car
+isCompleted(): boolean
+getID(): String
+getEstimatedCompletionTime(): TimeStamp
+getCompletionTime(): TimeStamp
+compareTo(CarOrder carOrder): int
+setOrderTime(TimeStamp time): void
+getOrderTime(): TimeStamp
+toString(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>780</y>
      <w>420</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring::AssemblyLine
--
-workStations: LinkedList&lt;WorkStation&gt;
--
+AssemblyLine(LinkedList&lt;WorkStation&gt; workStations): ctor
+advance(Car nextCar): Car
-carToNextWorkStation(Car nextCar): Car
-checkAdvance(): void
+getWorkStations(): List&lt;WorkStation&gt;
+getWorkstationNames(): List&lt;String&gt;
+getUncompletedTasks(WorkStation station): List&lt;Task&gt;
+isEmptyAssemblyLine(): boolean
+getUnfinishedCars(): List&lt;Car&gt;
+getStationByName(String stationName): WorkStation
+getUncompletedTasksByName(String stationName): List&lt;Task&gt;
+getCompletedTasksByName(String stationName): List&lt;Task&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2490</x>
      <y>1580</y>
      <w>530</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>swop.UI::ManagerUI
--
-managerGenerator: ManagerGenerator
-actions: List&lt;String&gt;
-manager: Manager
--
+setManager(Manager manager): void
+run(Manager manager): void
-selectAction(): void
-AdaptSchedulingAlgorithm(): void
-changeAlgorithmToBatch(): void
-checkProductionStatistics(): void
-showProductionStatistics(AllStats stats): void
-selectAction(List&lt;String&gt; actions, String currentAlgo): int
-getBatchSelection(List&lt;Map&lt;String, String&gt;&gt; possibleBatch): Map&lt;String, String&gt;
-printError(String e): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>790</x>
      <y>1730</y>
      <w>430</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>/swop.Car.CarModel::CarModel/
--
-carModelSpecification = null: CarModelSpecification
#name: String
#validOptions: Map&lt;String, List&lt;String&gt;&gt;
#mandatoryParts: List&lt;String&gt;
+types: List&lt;String&gt;
--
+setCarModelSpecification(CarModelSpecification selected): void
+getCarModelSpecification(): CarModelSpecification
+getValidOptions(): SortedMap&lt;String, List&lt;String&gt;&gt;
-isValidSpecification(CarModelSpecification specification): boolean
-IsValidOption(String option, String value): boolean
-satisfiesConstraints(CarModelSpecification specification): boolean
+getName(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1520</y>
      <w>200</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>/swop.CarManufactoring::Task/
--
#name: String
#description: String
#chosenOption: String
#isComplete = false: boolean
--
+complete(): void
+isComplete(): boolean
+getName(): String
+getDescription(): String
+getChosenOption(): String
+clone(): Task
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>980</y>
      <w>290</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>swop.Main::AssemAssist
--
-controller: CarManufacturingController
-statistics: Statistics
~userDatabase: Map&lt;String, User&gt;
--
+AssemAssist(): ctor
+run(): void
+getController(): CarManufacturingController
+getUserMap(): Map&lt;String, User&gt;
+addOrder(CarOrder carOrder): void
+getStats(): AllStats
+getUser(String id): User
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>1510</y>
      <w>320</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>swop.Miscellaneous::TimeStamp
--
-day: int
-minutes: int
--
+TimeStamp(int day, int minutes): ctor
+getDay(): int
+getMinutes(): int
-isValidTimeStamp(int day, int minutes): boolean
+toString(): String
+compareTo(TimeStamp timeStamp): int
+equals(Object o): boolean
+hashCode(): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1240</y>
      <w>740</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>swop.Users::GarageHolder
--
-carOrders: Set&lt;CarOrder&gt;
--
+GarageHolder(String id, AssemAssist assemAssist): ctor
-mapConfigToOptions(Map&lt;String, Integer&gt; carConfig, Map&lt;String, List&lt;String&gt;&gt; validOptions): Map&lt;String, String&gt;
+getModels(): List&lt;String&gt;
+createCarModel(int choice): CarModel
-placeOrderOnAssem(CarModel carModel): CarOrder
+getOrders(): Set&lt;CarOrder&gt;
+addOrder(CarOrder carOrder): void
+getValidOptions(CarModel model): SortedMap&lt;String, List&lt;String&gt;&gt;
+placeOrder(Map&lt;String, Integer&gt; carConfig, CarModel model): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1310</x>
      <y>1750</y>
      <w>450</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>swop.Car::CarModelSpecification
--
~chosenOptions: Map&lt;String, String&gt;
--
+CarModelSpecification(Map&lt;String, String&gt; chosenOptions): ctor
-checkConstraints(Map&lt;String, String&gt; chosenOptions): void
-isValidEngineAirco(String engine, String airco): boolean
-isValidBodyEngineCombination(String body, String engine): boolean
-isValidBodySpoilerCombination(String body, String spoiler): boolean
+getAllParts(): Map&lt;String, String&gt;
+getSelectionForPart(String selectedPart): String
+isPartInChosenOptions(String part): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2620</x>
      <y>1950</y>
      <w>230</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>swop.UI::LoginUI
--
-garageHolderUI: GarageHolderUI
-carMechanicUI: CarMechanicUI
-managerUI: ManagerUI
--
+LoginUI(AssemAssist assem): ctor
-run(AssemAssist assem): void
-login(AssemAssist assem): User
-init(): void
+getUserID(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2490</x>
      <y>1240</y>
      <w>530</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>swop.Users::Manager
--
+Manager(String id, AssemAssist assemAssist): ctor
+setSchedulingAlgorithm(String algorithm, Map&lt;String, String&gt; batchOptions): void
+getActiveAlgorithm(): String
+getValidAlgorithms(): List&lt;String&gt;
-isValidSchedulingAlgorithm(String algorithm): boolean
+getPartMapsOfCarQueue(): List&lt;Map&lt;String, String&gt;&gt;
+getBatchOptions(): List&lt;Map&lt;String, String&gt;&gt;
+getStats(): AllStats
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3080</x>
      <y>1240</y>
      <w>500</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>swop.Users::CarMechanic
--
+CarMechanic(String id, AssemAssist assemAssist): ctor
+getStationNames(): List&lt;String&gt;
+getUncompletedTasks(String stationName): List&lt;Task&gt;
+getCompletedTasks(String stationName): List&lt;Task&gt;
+completeTask(String stationName, String taskName, int passedTime): void
+isUncompletedTaskAtStation(String stationName, String taskName): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2580</x>
      <y>980</y>
      <w>320</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>/swop.Users::User/
--
-id: String
#assemAssist: AssemAssist
--
+User(String id, AssemAssist assemAssist): ctor
+getId(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>2070</y>
      <w>280</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>swop.Car.CarModel::ModelA
--
-modelAMandatory: List&lt;String&gt;
-modelAOptions: Map&lt;String, List&lt;String&gt;&gt;
--
+ModelA(): ctor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>850</x>
      <y>2070</y>
      <w>280</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>swop.Car.CarModel::ModelB
--
-modelBMandatory: List&lt;String&gt;
-modelBOptions: Map&lt;String, List&lt;String&gt;&gt;
--
+ModelB(): ctor
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1160</x>
      <y>2070</y>
      <w>280</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>swop.Car.CarModel::ModelC
--
-modelBMandatory: List&lt;String&gt;
-modelBOptions: Map&lt;String, List&lt;String&gt;&gt;
--
+ModelC(): ctor
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1270</x>
      <y>640</y>
      <w>220</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
swop.Listeners::StatisticsListener
--
~updateDelay(Car car): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>620</y>
      <w>270</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
swop.Listeners::TaskCompletedListener
--
~taskCompleted(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1960</y>
      <w>330</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::AssemblyCarBody
--
+AssemblyCarBody(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1890</y>
      <w>330</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::InsertEngine
--
+InsertEngine(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1820</y>
      <w>330</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::InstallAirco
--
+InstallAirco(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1750</y>
      <w>330</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::InstallGearbox
--
+InstallGearbox(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>1890</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::InstallSeats
--
+InstallSeats(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>1820</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::InstallSpoiler
--
+InstallSpoiler(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>1750</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::MountWheels
--
+MountWheels(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>450</x>
      <y>1960</y>
      <w>300</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>swop.CarManufactoring.Tasks::PaintCar
--
+PaintCar(String chosenOption): ctor

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>970</x>
      <y>540</y>
      <w>40</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>1040</y>
      <w>50</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m2=0..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>1140</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1470</x>
      <y>1350</y>
      <w>40</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>1530</y>
      <w>200</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=3</panel_attributes>
    <additional_attributes>180.0;80.0;10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>970</x>
      <y>1530</y>
      <w>40</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>1950</y>
      <w>180</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>1950</y>
      <w>30</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1950</y>
      <w>120</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1210</x>
      <y>1760</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>1010</y>
      <w>570</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;550.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>1170</y>
      <w>190</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..1</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>430</x>
      <y>1020</y>
      <w>50</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..*</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>810</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>680</y>
      <w>50</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>640</y>
      <w>230</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1880</x>
      <y>770</y>
      <w>40</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1480</x>
      <y>650</y>
      <w>260</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>650</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..*</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>990</y>
      <w>600</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=0..*
m2=1</panel_attributes>
    <additional_attributes>580.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2720</x>
      <y>1070</y>
      <w>30</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2280</x>
      <y>1070</y>
      <w>380</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>360.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2840</x>
      <y>1070</y>
      <w>360</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1610</x>
      <y>1240</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3340</x>
      <y>1360</y>
      <w>40</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m2=1</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2720</x>
      <y>1390</y>
      <w>40</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2080</x>
      <y>1430</y>
      <w>40</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2720</x>
      <y>1810</y>
      <w>40</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>470</x>
      <y>1530</y>
      <w>390</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..*</panel_attributes>
    <additional_attributes>10.0;80.0;370.0;80.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>1710</y>
      <w>50</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;60.0;10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>1710</y>
      <w>50</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;30.0;60.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>1710</y>
      <w>70</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;130.0;50.0;130.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>1710</y>
      <w>80</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;200.0;60.0;200.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>1710</y>
      <w>90</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;270.0;70.0;270.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>390</x>
      <y>1710</y>
      <w>80</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;270.0;10.0;270.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>1710</y>
      <w>70</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;200.0;10.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>1710</y>
      <w>60</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>40.0;130.0;10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2840</x>
      <y>1930</y>
      <w>550</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>520.0;10.0;520.0;60.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2090</x>
      <y>1930</y>
      <w>550</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;530.0;60.0</additional_attributes>
  </element>
</diagram>
